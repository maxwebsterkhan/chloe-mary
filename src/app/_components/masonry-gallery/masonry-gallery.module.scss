@use "../../_styles/tokens" as tokens;
@use "../../_styles/breakpoints" as *;

// Horizontal Gallery Styles
.horizontalSection {
  padding: 0;
  margin: 0;
  background-color: var(--color-primary);
  height: fit-content;
  width: 100vw;
  overflow: hidden;
  display: flex;
  align-items: center;
  position: relative;
}

.horizontalContainer {
  width: 100%;
  height: 100vh;
  overflow: hidden;
  position: relative;
  display: flex;
  align-items: center;
}

.horizontalGallery {
  display: flex;
  gap: 32px;
  height: 100vh;
  align-items: center;
  will-change: transform;
  min-width: fit-content;

  @include breakpoint-down("tablet") {
    gap: 24px;
  }

  @include breakpoint-down("mobile") {
    gap: 16px;
  }
}

.imageWrapper {
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;

  &:first-child {
    padding-left: tokens.$spacing-md;

    @include breakpoint-down("tablet") {
      padding-left: tokens.$spacing-sm;
    }

    @include breakpoint-down("mobile") {
      padding-left: tokens.$spacing-sm;
    }
  }

  &:last-child {
    padding-right: tokens.$spacing-md;

    @include breakpoint-down("tablet") {
      padding-right: tokens.$spacing-sm;
    }

    @include breakpoint-down("mobile") {
      padding-right: tokens.$spacing-sm;
    }
  }
}

.galleryImage {
  width: 400px;
  height: auto;
  max-height: 90vh;
  border-radius: 2px;
  cursor: zoom-in;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);

  &:hover {
    transform: scale(1.02);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
  }

  @include breakpoint-down("tablet") {
    width: 300px;
    height: auto;
    max-height: 85vh;
  }

  @include breakpoint-down("mobile") {
    width: 250px;
    height: auto;
    max-height: 80vh;
  }
}

// Legacy Masonry Styles (keeping for reference but not used)
.masonrySection {
  padding: tokens.$spacing-xl 0;
  background-color: var(--color-primary);

  @include breakpoint-down("tablet") {
    padding: tokens.$spacing-lg 0;
  }

  @include breakpoint-down("mobile") {
    padding: tokens.$spacing-md 0;
  }
}

.masonryContainer {
  width: 100%;
  max-width: var(--max-width, 1200px);
  margin: 0 auto;
  padding: 0 tokens.$spacing-md;

  @include breakpoint-down("tablet") {
    padding: 0 tokens.$spacing-sm;
  }
  @include breakpoint-down("mobile") {
    padding: 0 tokens.$spacing-sm;
  }
}

.gallery {
  columns: 300px;
  column-gap: 32px;
  line-height: 0;
}

// Lightbox Styles (unchanged)
.lightboxOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(10, 10, 10, 0.85);
  z-index: 10000;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: zoom-out;
  transition: background 0.2s;
}

.visuallyHidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.lightboxImageWrapper {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  height: fit-content;
}

.lightboxAlt {
  position: absolute;
  left: 0;
  bottom: 0;
  margin: 1.5rem;
  padding: 0.5rem 1.2rem 0.7rem 1.2rem;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0.92) 80%,
    rgba(255, 255, 255, 0.2) 100%
  );
  color: #222;
  font-size: 1rem;
  font-weight: 500;
  border-radius: 0 0 2px 2px;
  pointer-events: none;
  max-width: 60vw;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.07);
  user-select: text;
  opacity: 0.7;
  transition: opacity 0.2s;
}

@media (max-width: 600px) {
  .lightboxAlt {
    margin: 0.5rem;
    font-size: 0.95rem;
    max-width: 90vw;
    padding: 0.4rem 0.7rem 0.5rem 0.7rem;
  }
}

.lightboxClose {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  z-index: 10001;
  background: none;
  border: none;
  color: var(--color-secondary);
  font-size: 2.5rem;
  font-weight: 700;
  line-height: 1;
  cursor: pointer;

  transition: color 0.2s;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12);
  opacity: 0.85;
}

.lightboxClose svg {
  color: var(--color-secondary);
  transition: color 0.2s;
}

.lightboxClose:hover,
.lightboxClose:focus {
  color: var(--color-accent);
  opacity: 1;
}

.lightboxClose:hover svg,
.lightboxClose:focus svg {
  color: var(--color-accent);
}

@media (max-width: 600px) {
  .lightboxClose {
    top: 0.5rem;
    right: 0.5rem;
    font-size: 2rem;
    padding: 0.15em 0.3em;
  }
}

.lightboxImage {
  max-width: 90vw;
  max-height: 90vh;
  width: auto;
  height: auto;
  border-radius: 2px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.25);
  background: #fff;
}

// Loading and error states
.loadingState,
.errorState {
  padding: tokens.$spacing-xl;
  text-align: center;
  background-color: var(--color-primary);
  color: var(--color-secondary);
  font-size: 1.1rem;
}

// Scroll Progress Indicator
.scrollProgress {
  position: absolute;
  bottom: tokens.$spacing-md;
  left: 50%;
  transform: translateX(-50%);
  width: 200px;
  height: 4px;
  background: rgba(255, 255, 255, 0.3);
  border-radius: 2px;
  overflow: hidden;
  z-index: 10;

  @include breakpoint-down("tablet") {
    bottom: tokens.$spacing-sm;
    width: 150px;
  }

  @include breakpoint-down("mobile") {
    bottom: tokens.$spacing-sm;
    width: 120px;
  }
}

.scrollProgressBar {
  height: 100%;
  background: var(--color-secondary);
  border-radius: 2px;
  transition: width 0.3s ease;
}
